import { useState } from "react";
import { MessageCircle, X, Send } from "lucide-react";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";

const Chatbot = () => {
  const [isOpen, setIsOpen] = useState(false);
  const [selectedQuestion, setSelectedQuestion] = useState<string | null>(null);

  const quickQuestions = [
    {
      id: 1,
      question: "Gi√° c·∫£ c√°c g√≥i s·∫£n ph·∫©m nh∆∞ th·∫ø n√†o?",
      answer: "Ch√∫ng t√¥i c√≥ 4 g√≥i s·∫£n ph·∫©m: G√≥i Ti·∫øt ki·ªám (1.999.000ƒë), G√≥i C∆° b·∫£n (3.099.000ƒë), G√≥i Ti√™u chu·∫©n (9.390.000ƒë), v√† G√≥i N√¢ng cao (9.699.000ƒë). M·ªói g√≥i ph√π h·ª£p v·ªõi quy m√¥ v√† nhu c·∫ßu kh√°c nhau."
    },
    {
      id: 2,
      question: "Th·ªùi gian l·∫Øp ƒë·∫∑t m·∫•t bao l√¢u?",
      answer: "Th·ªùi gian l·∫Øp ƒë·∫∑t t·ª´ 2.75 gi·ªù ƒë·∫øn 6 gi·ªù t√πy thu·ªôc v√†o g√≥i s·∫£n ph·∫©m b·∫°n ch·ªçn. G√≥i Ti·∫øt ki·ªám: 2.75 gi·ªù, G√≥i C∆° b·∫£n: 3 gi·ªù, G√≥i Ti√™u chu·∫©n: 4-5 gi·ªù, G√≥i N√¢ng cao: 5-6 gi·ªù."
    },
    {
      id: 3,
      question: "H·ªá th·ªëng c√≥ h·ªó tr·ª£ ƒëi·ªÅu khi·ªÉn t·ª´ xa kh√¥ng?",
      answer: "C√≥! G√≥i N√¢ng cao h·ªó tr·ª£ ƒëi·ªÅu khi·ªÉn t·ª´ xa qua Internet v·ªõi ·ª©ng d·ª•ng di ƒë·ªông, c·∫£nh b√°o qua SMS/Email, v√† truy c·∫≠p m·ªçi l√∫c m·ªçi n∆°i v·ªõi chi ph√≠ thu√™ bao t·ª´ 200k/nƒÉm."
    },
    {
      id: 4,
      question: "L√†m sao ƒë·ªÉ ƒë∆∞·ª£c t∆∞ v·∫•n mi·ªÖn ph√≠?",
      answer: "B·∫°n c√≥ th·ªÉ li√™n h·ªá v·ªõi ch√∫ng t√¥i qua s·ªë ƒëi·ªán tho·∫°i 1234280105 ho·∫∑c ƒë·∫øn tr·ª±c ti·∫øp vƒÉn ph√≤ng t·∫°i 193 Vƒ©nh H∆∞ng, Ho√†ng Mai, HN ƒë·ªÉ ƒë∆∞·ª£c t∆∞ v·∫•n mi·ªÖn ph√≠."
    },
    {
      id: 5,
      question: "B·∫£o h√†nh s·∫£n ph·∫©m nh∆∞ th·∫ø n√†o?",
      answer: "T·∫•t c·∫£ s·∫£n ph·∫©m c·ªßa XNetFarm ƒë·ªÅu ƒë∆∞·ª£c b·∫£o h√†nh 12 th√°ng k·ªÉ t·ª´ ng√†y l·∫Øp ƒë·∫∑t. Ch√∫ng t√¥i c≈©ng cung c·∫•p d·ªãch v·ª• b·∫£o tr√¨ ƒë·ªãnh k·ª≥ v√† h·ªó tr·ª£ k·ªπ thu·∫≠t 24/7."
    }
  ];

  return (
    <div className="fixed bottom-6 right-6 z-50">
      {/* Chat Button */}
      {!isOpen && (
        <Button
          onClick={() => setIsOpen(true)}
          className="w-14 h-14 rounded-full bg-accent hover:bg-accent-light shadow-feature animate-pulse group"
        >
          <MessageCircle className="h-6 w-6 group-hover:scale-110 transition-transform" />
        </Button>
      )}

      {/* Chat Window */}
      {isOpen && (
        <Card className="w-80 h-96 shadow-feature border-primary/20 animate-scale-in">
          <CardHeader className="pb-3">
            <div className="flex items-center justify-between">
              <CardTitle className="text-lg text-foreground">
                Tr·ª£ l√Ω XNetFarm ü§ñ
              </CardTitle>
              <Button
                variant="ghost"
                size="sm"
                onClick={() => {
                  setIsOpen(false);
                  setSelectedQuestion(null);
                }}
              >
                <X className="h-4 w-4" />
              </Button>
            </div>
            <p className="text-sm text-muted-foreground">
              Ch·ªçn c√¢u h·ªèi b√™n d∆∞·ªõi ƒë·ªÉ ƒë∆∞·ª£c h·ªó tr·ª£ nhanh
            </p>
          </CardHeader>
          
          <CardContent className="space-y-3 max-h-64 overflow-y-auto">
            {!selectedQuestion ? (
              // Quick Questions
              <>
                {quickQuestions.map((item) => (
                  <button
                    key={item.id}
                    onClick={() => setSelectedQuestion(item.answer)}
                    className="w-full text-left p-3 rounded-lg border border-border hover:border-primary/50 hover:bg-muted/50 transition-all duration-200 text-sm"
                  >
                    {item.question}
                  </button>
                ))}
                <div className="pt-2 border-t border-border">
                  <p className="text-xs text-muted-foreground text-center">
                    Ho·∫∑c li√™n h·ªá tr·ª±c ti·∫øp: <strong>1234280105</strong>
                  </p>
                </div>
              </>
            ) : (
              // Answer Display
              <div className="space-y-4">
                <div className="p-3 bg-primary/10 rounded-lg">
                  <p className="text-sm text-foreground leading-relaxed">
                    {selectedQuestion}
                  </p>
                </div>
                <div className="flex gap-2">
                  <Button
                    variant="outline"
                    size="sm"
                    onClick={() => setSelectedQuestion(null)}
                    className="flex-1"
                  >
                    C√¢u h·ªèi kh√°c
                  </Button>
                  <Button
                    size="sm"
                    className="flex-1 bg-accent hover:bg-accent-light"
                  >
                    <Send className="h-4 w-4 mr-1" />
                    Li√™n h·ªá
                  </Button>
                </div>
              </div>
            )}
          </CardContent>
        </Card>
      )}
    </div>
  );
};

export default Chatbot;